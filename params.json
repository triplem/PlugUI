{"name":"Plugui","google":"","tagline":"A custom web interface built for managing a plug, includes a file browser for mounted devices, a package upgrade manager, and some simple OS configuration options.","body":"#PlugUI 2\r\n\r\nPlugUI 2 is a file management and system admin web interface for small ARM based devices running Arch Linux ARM. \r\n\r\nIt will run on other distros, but the package manager is right now geared to use pacman. We are going to provide a specific module for pacman, so that this could be removed and \r\nreplaced with a different one, but this is not going to be developed by us (at least in the near future).\r\n\r\nThe current version is under high development, it is a rewrite of the older PlugUI code (which was python), using Node.js. The older code is still in this repo in the django branch.\r\n\r\nThe old version was heavily tied to server-side things like django forms and templates, which don't play very nicely with in-browser applications, so PlugUI 2 is a cleanly separated browser \r\nand server component, which communicate with each other via a REST API using JSON and at some point probably websockets too. This allows the server to completely ignore anything that doesnt \r\ninvolve running commands, fetching information or checking authentication, while the browser side can completely ignore how all those things are implemented by relying on a clean API.\r\n\r\nThe rewrite isn't anywhere near done yet, so if you want something usable, checkout the project and contribute some stuff.\r\n\r\n##Setup for development\r\n\r\nInstall node:\r\n\r\n\tpacman -Sy nodejs\r\n\r\nClone this repo into a location of your choice (e.g. /opt/):\r\n\r\n\tcd /opt; git clone git://github.com/triplem/PlugUI.git\r\n\r\nThen install the required node modules:\r\n\r\n\tnpm install\r\n\r\nNow run the script:\r\n\r\n\tnode server.js\r\n\r\nYou can adopt the config/app.yaml file to make sure, the application is running on the right port and also to adopt some\r\nmore settings. The basepath is the path, where the file explorer starts. \t\r\n\r\n##Authentication\r\n\r\nThe current codebase relies on system PAM authentication (denying root by default). This allows users to enter the same username and password via plugui, ssh, or any other system level component. \r\n\r\nNOTE: The authentication needs to get implemented in the latest version.\r\n\r\n##Status \r\n\r\nThere is a current status page which shows detailed information about the system running the PlugUI application. This page was formerly known as the Dashboard. This page will get splitted into \r\nthe Status (only viewable after login) and the Dashboard, which shows some common information, without the need to login.\r\n\r\nThe main page of PlugUI is the dashboard, which already has the hard work done for things like showing system load, memory use, etc. Just needs some pretty graphical elements to show it.\r\n\r\nPackage notifications for new updates are also planned but not implemented in the Node version yet.\r\n\r\n##File Browser\r\n\r\nThe file browser is basic and shows the directory. \r\n\r\nIt's a single page list, clicking a folder name opens that folder, clicking the parent directory link backs up one level.\r\n\r\nPlanned soon are 'more info' buttons for each file, which will pop up a small box containing permissions information, filesize and other details for a file, along with controls to configure sharing of that file.\r\n\r\nEverything is 'sandboxed' inside the /media/ folder right now, this may need to be a user setting or perhaps just start trusting the user and allow / access (user already has a system level password if they can get here).\r\n\r\nLayout and behavior both need some tweaking. Sharing and download/media playback aren't ported to node yet.\r\n\r\n##Media playback\r\n\r\nThe old version of PlugUI had a simple music playback system integrated with the file browser. The new version will have a global media player with volume control, playlist and so on. \r\n\r\nThis depends on the backend api for file downloads so isn't in the codebase yet.\r\n\r\n##Package Manager\r\n\r\nRight now all already installed packages are shown. It is planned to show detailed information for a specific package and also to allow to install/remove packages.\r\n\r\n##Settings & users\r\n\r\nCurrently has a simple list of system users (pulls from /etc/passwd), will be able to add and delete users, change their shell, home folder, password and other basic things.\r\n\r\nSettings area will also have basic network settings of some kind, perhaps using NetworkManager, netcfg or something like this,  but that is not the Arch default so requires more testing.\r\n\r\n##API\r\n\r\nNote: This is all subject to change, most of the APIs aren't even implemented yet and will morph as the needs of the frontend dictate.\r\n\r\nRight now none of these are protected at all, but at some point in the near future you will have to use the auth API to start a session before using any other API. That means storing the cookie and returning it just like a web browser would, if using another tool.\r\n\r\nAll API methods return a top level 'success' boolean indicating whether or not the API command successfully completed and can return the right data, check if this is false before doing anything else with a result.\r\n\r\nAny method which accepts json can also technically accept a standard url encoded form too, so for instance Curl posts will work fine. They're still intended for json, so if you hit an API that requires multi-level structure requests, use json :D\r\n\r\n###Status \r\n\r\nSimple device information, memory stats, load average and uptime. May add more stats in the future.\r\n\r\n\tGET: /api/status\r\n\t\r\n\tAccepts: nothing\r\n\t\r\n\tReturns: json\r\n\t\r\n\tDetails: All sizes are in bytes, all times are in seconds.\r\n\t\r\n\tSample: { \"success\":true, \r\n\t\t\t  \"freemem\":14774272,\r\n\t\t\t  \"memused\":238837760, \r\n\t\t\t  \"totalmem\":253612032,\r\n\t\t\t  \"loadavg\":[5.8623046875,5.5654296875,5.21826171875], \r\n\t\t\t  \"uptime\":498867.340181713, \r\n\t\t\t  \"hostname\": \"athene\",\r\n\t\t\t  \"type\": \"Linux\",\r\n\t\t\t  \"release\": \"3.4.4-2-ARCH\",\r\n\t\t\t  \"platform\": \"linux\",\r\n\t\t\t  \"arch\": \"arm\",\r\n\t\t\t  \"version\": \"1.10.001\" }\r\n\t\r\n###Auth\r\n\r\nAssists the frontend in validating existing sessions or authenticating a user, creates a cookie session if successful.\r\n\r\n\tPOST: /api/auth\r\n\t\r\n\tAccepts: json\r\n\t\r\n\tReturns: json\r\n\t\r\n\tDetails: 3 commands so far, 'check', 'login' and 'logout'. \r\n\t\t\t Check avoids requiring the frontend to authenticate when a session already exists.\r\n\t\r\n\t\r\n####Check for a session \r\n\r\n\tRequest: { apicmd: 'check' }\r\n\t\r\n\tResponse: { success: true|false, authenticated: true|false, username: username }\r\n\t\r\n\t\r\n####Login \r\n\r\n\tRequest: { apicmd: 'login', username: 'username', password: 'password' }\r\n\t\r\n\tResponse: { success: true|false, authenticated: true|false, username: username }\r\n\t\r\n####Logout\r\n\r\n\tRequest: { apicmd: 'logout' }\r\n\t\r\n\tResponse: { success: true|false }\r\n\r\n###Users\r\n\r\nAllows the frontend to manage system users\r\n\r\n\tPOST: /api/users\r\n\t\r\n\tAccepts: json\r\n\t\r\n\tReturns: json\r\n\t\r\n\tDetails: This is a jsonified wrapper around some unix tools for working with system users. \r\n\t\t\t The user list is all inclusive, frontend must show or hide them as appropriate.\r\n\t\r\n####List users \r\n\r\n\tRequest: { apicmd: 'list' }\r\n\t\r\n\tResponse: { \"success\":true,\r\n\t\t\t\t\"userlist\": [\r\n\t\t\t\t\t{\"username\":\"root\",\"uid\":\"0\",\"gid\":\"0\",\"homedir\":\"/root\",\"shell\":\"/bin/bash\"},\r\n\t\t\t\t\t{\"username\":\"bin\",\"uid\":\"1\",\"gid\":\"1\",\"homedir\":\"/bin\",\"shell\":\"/bin/false\"},\r\n\t\t\t\t\t{\"username\":\"daemon\",\"uid\":\"2\",\"gid\":\"2\",\"homedir\":\"/sbin\",\"shell\":\"/bin/false\"},\r\n\t\t\t\t\t{\"username\":\"mail\",\"uid\":\"8\",\"gid\":\"12\",\"homedir\":\"/var/spool/mail\",\"shell\":\"/bin/false\"},\r\n\t\t\t\t\t{\"username\":\"ftp\",\"uid\":\"14\",\"gid\":\"11\",\"homedir\":\"/srv/ftp\",\"shell\":\"/bin/false\"},\r\n\t\t\t\t\t{\"username\":\"http\",\"uid\":\"33\",\"gid\":\"33\",\"homedir\":\"/srv/http\",\"shell\":\"/bin/false\"},\r\n\t\t\t\t\t{\"username\":\"nobody\",\"uid\":\"99\",\"gid\":\"99\",\"homedir\":\"/\",\"shell\":\"/bin/false\"},\r\n\t\t\t\t\t{\"username\":\"dbus\",\"uid\":\"81\",\"gid\":\"81\",\"homedir\":\"/\",\"shell\":\"/bin/false\"},\r\n\t\t\t\t\t{\"username\":\"ntp\",\"uid\":\"87\",\"gid\":\"87\",\"homedir\":\"/var/empty\",\"shell\":\"/bin/false\"},\r\n\t\t\t\t\t{\"username\":\"steve\",\"uid\":\"501\",\"gid\":\"100\",\"homedir\":\"/home/steve\",\"shell\":\"/bin/bash\"}\r\n\t\t\t\t]\r\n\t\t\t }\r\n\t\r\n\t\r\n####Create a user\r\n\r\n\tUnimplemented\r\n\t\r\n####Delete a user\r\n\r\n\tUnimplemented\r\n\r\n\r\n###Files \r\n\r\nAllows for simple directory listing, file download, delete\r\n\r\n\tPOST: /api/files\r\n \r\n\tAccepts: json\r\n \r\n\tReturns: json|binary file (depending on the command)\r\n \r\n\tDetails: File list is sandboxed inside /media by path standardization followed by regex matching. \r\n\t\t\t All requested paths are relative to that directory, this may change in the future.\r\n\t\t\t All returned sizes are in bytes.\r\n\t\t\t Files without any extension will not have a 'type' property, check its length before using.\r\n\t\r\n\r\n####Directory list\r\n\r\n\t\tRequest: { apicmd: 'directory_list', path: \"/build\" }\r\n\t\t\r\n\t\tResponse: { \"success\":true, \r\n\t\t\t\t\t\"requestpath\": \"/media/build\",\r\n\t\t\t\t\t\"validpath\": true,\r\n\t\t\t\t\t\"files\": [ \r\n\t\t\t\t\t\t{\"type\":\"conf\",\"fullpath\":\"/media/build/motion.conf\",\"directory\":\"/media/build\",\"name\":\"motion.conf\",\"isFolder\":false,\"size\":23997},\r\n\t\t\t\t\t\t{\"type\":\"tar\",\"fullpath\":\"/media/build/clang_3.0-3ubuntu1.debian.tar\",\"directory\":\"/media/build\",\"name\":\"clang_3.0-3ubuntu1.debian.tar\",\"isFolder\":false,\"size\":112640},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/PKGBUILDs\",\"directory\":\"/media/build\",\"name\":\"PKGBUILDs\",\"isFolder\":true,\"size\":12},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/Temporary Items\",\"directory\":\"/media/build\",\"name\":\"Temporary Items\",\"isFolder\":true,\"size\":3},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/cam\",\"directory\":\"/media/build\",\"name\":\"cam\",\"isFolder\":true,\"size\":3},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/node_modules\",\"directory\":\"/media/build\",\"name\":\"node_modules\",\"isFolder\":true,\"size\":9},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/PlugUI\",\"directory\":\"/media/build\",\"name\":\"PlugUI\",\"isFolder\":true,\"size\":19},\r\n\t\t\t\t\t\t{\"type\":\"py\",\"fullpath\":\"/media/build/led.py\",\"directory\":\"/media/build\",\"name\":\"led.py\",\"isFolder\":false,\"size\":1185},\r\n\t\t\t\t\t\t{\"type\":\"gz\",\"fullpath\":\"/media/build/cloud9-git.tar.gz\",\"directory\":\"/media/build\",\"name\":\"cloud9-git.tar.gz\",\"isFolder\":false,\"size\":1658},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/llvm\",\"directory\":\"/media/build\",\"name\":\"llvm\",\"isFolder\":true,\"size\":20},\r\n\t\t\t\t\t\t{\"type\":\"c\",\"fullpath\":\"/media/build/hello.c\",\"directory\":\"/media/build\",\"name\":\"hello.c\",\"isFolder\":false,\"size\":80},\r\n\t\t\t\t\t\t{\"type\":\"i\",\"fullpath\":\"/media/build/hello.i\",\"directory\":\"/media/build\",\"name\":\"hello.i\",\"isFolder\":false,\"size\":17259},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/Network Trash Folder\",\"directory\":\"/media/build\",\"name\":\"Network Trash Folder\",\"isFolder\":true,\"size\":3},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/meta-texasinstruments\",\"directory\":\"/media/build\",\"name\":\"meta-texasinstruments\",\"isFolder\":true,\"size\":14},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/cloud9-git\",\"directory\":\"/media/build\",\"name\":\"cloud9-git\",\"isFolder\":true,\"size\":9},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/log\",\"directory\":\"/media/build\",\"name\":\"log\",\"isFolder\":true,\"size\":3},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/build\",\"directory\":\"/media/build\",\"name\":\"build\",\"isFolder\":true,\"size\":7},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/libobjc2\",\"directory\":\"/media/build\",\"name\":\"libobjc2\",\"isFolder\":true,\"size\":4},\r\n\t\t\t\t\t\t{\"type\":\"folder\",\"fullpath\":\"/media/build/lost+found\",\"directory\":\"/media/build\",\"name\":\"lost+found\",\"isFolder\":true,\"size\":3} \r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t","note":"Don't delete this file! It's used internally to help with page regeneration."}